var float(entity attacker, entity inflictor, float deathtype) GameHook_DeathHandle = { return FALSE; }
var float() GameHook_SpeedMod = { return 1; }
var void(entity spot) GameHook_Spawn = {}
var void(entity plr, entity attacker, float killed) GameHook_PlayerClear = {}
var float(entity attacker, entity targ, float f) GameHook_FragsHandle = { return f; }
var float(entity inflictor, entity attacker, float damage, float deathtype, vector hitloc, vector force) GameHook_DamageHandle = { return FALSE; }
var float(entity plr) GameHook_PlayerCanFire = { return TRUE; }
var float() GameHook_PlayerAllowedToMove = { return TRUE; }
var void() GameHook_PhysicFrameBegin = {}
var void() GameHook_PlayerPreThink = {}
var entity() GameHook_SelectSpawnPoint = {
	entity spot;
	spot = SelectSpawnPoint (FALSE);
	if not(spot)
		spot = SelectSpawnPoint(TRUE);
	
	return spot;
}
var float(float fraglimit, float leadlimit) GameHook_WinningCondition = { 
	if (WinningCondition_RanOutOfSpawns()) {
		bprint("Hey! Someone ran out of spawns!\n");
		return TRUE;
	}
	return WinningCondition_Scores(fraglimit, leadlimit);
}
var float() GameHook_OvertimeHandle = { return FALSE; }
var float() GameHook_OvertimeAllowed = { return TRUE; }
var void() GameHook_Reset = {}
var void() GameHook_ObserverSpawn = {}
var void() GameHook_InitSpectator = {}
var float(entity spot) GameHook_SpawnPointGood = { return TRUE; }
var void(float frags_remain) stub_WinCountDown = {}
var void(float frags_remain) GameHook_WinCountDown = {
	if (frags_remain == 1)
		play2all("announcer/robotic/1fragleft.wav");
	else if (frags_remain == 2)
		play2all("announcer/robotic/2fragsleft.wav");
	else if (frags_remain == 3)
		play2all("announcer/robotic/3fragsleft.wav");
}
var float(float f) GameHook_KillDelayMod = { return f; }
var string(string s) GameHook_SuddenDeathMessageMod = { return s; }
var float() false_WarmupAllowed = { return FALSE; }
var float() GameHook_WarmupAllowed = { return TRUE; }
